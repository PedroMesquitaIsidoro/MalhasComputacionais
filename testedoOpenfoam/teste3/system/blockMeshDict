/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;

vertices
(
    // bloco do meio
    (0.001 0 0) // 0
    ( 0.002 0 0) // 1
    ( 0.002 0.000125 0) // 2
    (0.001 0.000125 0) // 3
    (0.001 0 0.00001) //4
    ( 0.002 0 0.00001) //5 
    ( 0.002 0.000125 0.00001) //6
    (0.001 0.000125 0.00001) //7

    // bloco da direita
    (0.002 0 0) // 8
    ( 0.003 0 0) // 9
    ( 0.003 0.000125 0) // 10
    (0.002 0.000125 0) // 11
    (0.002 0 0.00001) //12
    ( 0.003 0 0.00001) //13 
    ( 0.003 0.000125 0.00001) //14
    (0.002 0.000125 0.00001) //15

    // bloco da esquerda
    ( 0 0 0) // 16
    ( 0.001 0 0) // 17
    ( 0.001 0.000125 0) // 18
    (0 0.000125 0) // 19
    (0 0 0.00001) //20
    ( 0.001 0 0.00001) //21
    ( 0.001 0.000125 0.00001) //22
    (0 0.000125 0.00001) //23
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (80 60 10) simpleGrading (1 1 1)

    hex (8 9 10 11 12 13 14 15) (80 60 10) simpleGrading (1 1 1)

    hex (16 17 18 19 20 21 22 23) (80 60 10) simpleGrading (1 1 1)
);

edges
(
    // arco de cima
    arc 0 1 (0.0015 0.000625 0)
    arc 4 5 (0.0015 0.000625 0)

    arc 3 2 (0.0015 -0.0005 0)
    arc 7 6 (0.0015 -0.0005 0)
);

boundary
(
    free
    {
        type patch;
        faces
        (
            (3 7 6 2)
            (1 5 4 0)
        );
    }
    inlet
    {
        type patch;
        faces
        (
            (0 4 7 3)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (2 6 5 1)
        );
    }
    frontAndBack
    {
        type patch;
        faces
        (
            (0 3 2 1)
            (4 5 6 7)
        );
    }
);

// ************************************************************************* //
